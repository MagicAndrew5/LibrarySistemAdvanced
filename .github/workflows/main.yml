name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MAVEN_CLI_OPTS: "--batch-mode --threads 1C --strict-checksums"
  MAVEN_OPTS: >
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
  JAVA_TOOL_OPTIONS: "-Xmx1024m"

jobs:
  build:
    name: Build & Test BackEnd
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Cache Maven
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Validate
      run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS validate

    - name: Compile
      run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS compile

    - name: Run tests
      run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS test

    - name: Package
      run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS package -DskipTests

  dockerize:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: your-dockerhub-username/library-backend:latest
