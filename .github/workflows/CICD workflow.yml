name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DB_NAME }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_DB_PASSWORD }}
        ports: ['3306:3306']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL..."
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -u ${{ secrets.MYSQL_DB_USERNAME }} -p${{ secrets.MYSQL_DB_PASSWORD }} --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Still waiting..."
          sleep 2
        done
    - name: Build and Test Backend
      working-directory: LibrarySystem-Backend
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/library?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
        SPRING_DATASOURCE_USERNAME: ${{ secrets.MYSQL_DB_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_DB_PASSWORD }}
        SPRING_JPA_HIBERNATE_DDL_AUTO: update
      run: |
        ./mvnw clean install

        if [ $? -ne 0 ]; then
          echo "=== TEST FAILURE REPORTS ==="
          find target/surefire-reports -name "*.txt" -exec cat {} \;
          exit 1
        fi

    - name: Run Checkstyle
      working-directory: LibrarySystem-Backend
      run: ./mvnw checkstyle:checkstyle

    - name: Run Spotbugs
      working-directory: LibrarySystem-Backend
      run: ./mvnw spotbugs:check

    - name: Generate Coverage Report
      working-directory: LibrarySystem-Backend
      run: ./mvnw jacoco:report

  frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Frontend Dependencies
      working-directory: LibrarySystem-Frontend
      run: npm ci

    - name: Run Frontend Tests
      working-directory: LibrarySystem-Frontend
      run: npm run test -- --watch=false --browsers=ChromeHeadless

    - name: Build Frontend
      working-directory: LibrarySystem-Frontend
      run: npm run build

    - name: Run ESLint
      working-directory: LibrarySystem-Frontend
      run: npm run lint

